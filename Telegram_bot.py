# Bot helper fragment for refugee women from Ukraine

# pip install aiogram
import sys
import logging

from aiogram import Bot, Dispatcher, executor
from aiogram.types import Message, \
    InlineKeyboardButton, InlineKeyboardMarkup
#   CallbackQuery, KeyboardButton

from config import TOKEN_KEY

#photo = open('logo.png', 'rb')

#sys.path.append('../../')

#logging.basicConfig(level=logging.INFO)

TOKEN = TOKEN_KEY
print(TOKEN)
bot = Bot(TOKEN)
dp = Dispatcher(bot)



from aiohttp import ClientSession

from config import MEASUREMENT_ID, API_SECRET


async def send_analytics(user_id, user_lang_code, action_name):
    """
    Send record to Google Analytics
    """
    params = {
        'client_id': str(user_id),
        'user_id': str(user_id),
        'events': [{
            'name': action_name,
            'params': {
                'language': user_lang_code,
                'engagement_time_msec': '1',
            }
        }],
    }
    async with ClientSession() as session:
        await session.post(
                f'https://www.google-analytics.com/'
                f'mp/collect?measurement_id={MEASUREMENT_ID}&api_secret={API_SECRET}',
                json=params)



# –ü–∏—à–µ–º –∫–æ–º–∞–Ω–¥—É —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –∑–∞—Å—Ç–∞–≤–∫–æ–π
@dp.message_handler(commands=['start'])
async def callback_start(message: Message):
    #await bot.send_photo(chat_id=message.chat.id, photo=open('logo.png', 'rb').read())
    await bot.send_photo(chat_id=message.chat.id, photo='https://raw.githubusercontent.com/d-k-git/tg-bot/main/logo.png')
    #await bot.send_photo(chat_id=message.chat.id, photo=types.InputFile.from_url('logo.png'))
    await bot.send_message(
        chat_id=message.chat.id,
        reply_markup=choose_lang,
        text="–ü—Ä–∏–≤–µ—Ç, —è —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —á–∞—Ç-–±–æ—Ç. –ü–æ–º–æ–≥—É –≤–∞–º. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:")

# –ü–∏—à–µ–º –∫–æ–º–∞–Ω–¥—É —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –∑–∞—Å—Ç–∞–≤–∫–æ–π
@dp.message_handler(commands=['language'])
async def callback_language(message: Message):
    await bot.send_message(
        chat_id=message.chat.id,
        reply_markup=choose_lang,
        text="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:")

    await send_analytics(user_id=message.from_user.id,
                         user_lang_code=message.from_user.language_code,
                         action_name='select_lang_rus')

# –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É c –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞
choose_lang = InlineKeyboardMarkup().row(
    InlineKeyboardButton(text="–£–∫—Ä–∞—ó–Ω—Å—å–∫a", callback_data="get-UKR"),
    InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="get-RUS"))


# –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞:
@dp.callback_query_handler(lambda c: c.data == 'get-UKR')
async def get_UKR(message: Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        reply_markup=chosen_ukr,
        text="–í–∏–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É:")

    await send_analytics(user_id=message.from_user.id,
                         user_lang_code=message.from_user.language_code,
                         action_name='select_lang_ukr')

@dp.callback_query_handler(lambda c: c.data == 'get-RUS')
async def get_RUS(message: Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        reply_markup=chosen_rus,
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:")


# --------- –ó–î–ï–°–¨ –í–´–ë–û–† –°–¢–†–ê–ù–´ –ò –†–ê–ó–î–ï–õ–ê ---------
chosen_rus = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton(text="–ì–µ—Ä–º–∞–Ω–∏—è", callback_data="DEU_rus"),
    InlineKeyboardButton(text="–ü–æ–ª—å—à–∞", callback_data="POL_rus"),
)
chosen_ukr = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton(text="–ù—ñ–º–µ—á—á–∏–Ω–∞", callback_data="DEU_ukr"),
    InlineKeyboardButton(text="–ü–æ–ª—å—â–∞", callback_data="POL_ukr"),
)


# ------- –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –ø–æ —Å—Ç—Ä–∞–Ω–µ: –ì–ï–†–ú–ê–ù–ò–Ø -------
DEU_chosen_service_rus = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton(text="–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", callback_data="DEU_sec_main_rus"),
)

DEU_chosen_service_ukr = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton(text="–ë–µ–∑–ø–µ–∫–∞", callback_data="DEU_sec_main_ukr"),
)


# ------- –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –ø–æ —Å—Ç—Ä–∞–Ω–µ: –ü–û–õ–¨–®–ê -------
POL_chosen_service_rus = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton(text="–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", callback_data="POL_sec_main_rus"),
    InlineKeyboardButton(text="–ú–µ–¥–∏—Ü–∏–Ω–∞", callback_data="POL_med_main_rus"),
    InlineKeyboardButton(text="–†–∞–±–æ—Ç–∞", callback_data="POL_wrk_main_rus"),
    InlineKeyboardButton(text="–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ", callback_data="POL_res_main_rus"),
    InlineKeyboardButton(text="–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å", callback_data="POL_law_main_rus"),
    InlineKeyboardButton(text="–ë—ã—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="POL_day_main_rus"),
)

POL_chosen_service_ukr = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton(text="–ë–µ–∑–ø–µ–∫–∞", callback_data="POL_sec_main_ukr"),
    InlineKeyboardButton(text="–ú–µ–¥–∏—Ü–∏–Ω–∞", callback_data="POL_med_main_ukr"),
    InlineKeyboardButton(text="–†–æ–±–æ—Ç–∞", callback_data="POL_wrk_main_ukr"),
    InlineKeyboardButton(text="–ü—Ä–æ–∂–∏–≤–∞–Ω–Ω—è", callback_data="POL_res_main_ukr"),
    InlineKeyboardButton(text="–Æ—Ä–∏–¥–∏—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞", callback_data="POL_law_main_ukr"),
    InlineKeyboardButton(text="–ü–æ–±—É—Ç–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è", callback_data="POL_day_main_ukr"),
)


@dp.callback_query_handler(lambda c: c.data == "DEU_rus")
async def DEU_rus(message: Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        reply_markup=DEU_chosen_service_rus,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø–æ–º–æ—â–∏:")

    await send_analytics(user_id=message.from_user.id,
                         user_lang_code=message.from_user.language_code,
                         action_name='DEU_chosen_service_rus')

@dp.callback_query_handler(lambda c: c.data == "POL_rus")
async def POL_rus(message: Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        reply_markup=POL_chosen_service_rus,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø–æ–º–æ—â–∏:")

    await send_analytics(user_id=message.from_user.id,
                     user_lang_code=message.from_user.language_code,
                     action_name='POL_chosen_service_rus')


@dp.callback_query_handler(lambda c: c.data == "DEU_ukr")
async def DEU_ukr(message: Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        reply_markup=DEU_chosen_service_ukr,
        text="–í–∏–±–µ—Ä—ñ—Ç—å –≤–∏–¥ –¥–æ–ø–æ–º–æ–≥–∏:")
    await send_analytics(user_id=message.from_user.id,
                     user_lang_code=message.from_user.language_code,
                     action_name='DEU_chosen_service_ukr')


@dp.callback_query_handler(lambda c: c.data == "POL_ukr")
async def POL_ukr(message: Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        reply_markup=POL_chosen_service_ukr,
        text="–í–∏–±–µ—Ä—ñ—Ç—å –≤–∏–¥ –¥–æ–ø–æ–º–æ–≥–∏:")


# --------- –ó–î–ï–°–¨ –î–ï–†–ï–í–û –ü–û –†–ê–ó–î–ï–õ–ê–ú –ò –°–¢–†–ê–ù–ê–ú ---------
# ------- –†–ê–ó–î–ï–õ: –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ -------
# ----- –°–¢–†–ê–ù–ê: –ì–ï–†–ú–ê–ù–ò–Ø -----
# --- –ö–Ω–æ–ø–∫–∞ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ : "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" ---
# - –Ø–∑—ã–∫ —Ä—É—Å—Å–∫–∏–π -
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:
DEU_sec_main_rus_buttons = InlineKeyboardMarkup(row_width=1)
DEU_sec_main_rus_buttons = DEU_sec_main_rus_buttons.add(
    InlineKeyboardButton(text=(
        "–î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"),
                         callback_data="DEU_sec_other_rus"),
    InlineKeyboardButton(text=(
        "–ö–∞–∫ —Å–µ–±—è –æ–±–µ–∑–æ–ø–∞—Å–∏—Ç—å"),
                         callback_data="DEU_sec_selfprotect_rus"),
    InlineKeyboardButton(text=(
        "–ö–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å—É—Ç–µ–Ω—ë—Ä–∞ –∏ —É–∑–Ω–∞—Ç—å, –ª–µ–≥–∞–ª—å–Ω–∞ –ª–∏ —Ä–∞–±–æ—Ç–∞"),
                         callback_data="DEU_sec_illegal_rus"),
    InlineKeyboardButton(text=(
        "–°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –ø–æ–º–æ—â–∏ –±–µ–∂–µ–Ω—Ü–∞–º"),
                         callback_data="DEU_sec_general_rus"),
    )
DEU_sec_main_rus_buttons = DEU_sec_main_rus_buttons.row(
    InlineKeyboardButton(text=(
        "üóÇ –ö —Ä–∞–∑–¥–µ–ª–∞–º"), callback_data="DEU_rus"),
    InlineKeyboardButton(text=(
        "üåç –î—Ä—É–≥–∞—è —Å—Ç—Ä–∞–Ω–∞"), callback_data="get-RUS"),
    InlineKeyboardButton(text=(
        "üÜò SOS"), callback_data="DEU_sec_main_rus"))


[...]


# --------- –ó–î–ï–°–¨ –ó–ê–ö–ê–ù–ß–ò–í–ê–ï–¢–°–Ø –î–ï–†–ï–í–û –ü–û –†–ê–ó–î–ï–õ–ê–ú –ò –°–¢–†–ê–ù–ê–ú ---------


if __name__ == "__main__":
    # dp.register_message_handler(DEU_sec_other_rus, state="*")
    executor.start_polling(dp)
